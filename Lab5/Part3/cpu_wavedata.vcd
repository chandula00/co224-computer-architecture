$date
	Tue May 23 11:10:53 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 # CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 3 & WRITEREG [2:0] $end
$var wire 8 ' ResultDATA [7:0] $end
$var wire 8 ( REGOUT2 [7:0] $end
$var wire 8 ) REGOUT1 [7:0] $end
$var wire 3 * READREG2 [2:0] $end
$var wire 3 + READREG1 [2:0] $end
$var wire 8 , OPCODE [7:0] $end
$var wire 8 - NegatedDATA [7:0] $end
$var wire 8 . IMMEDIATE [7:0] $end
$var wire 8 / DATA2 [7:0] $end
$var wire 8 0 ALURESULT [7:0] $end
$var reg 3 1 ALUOP [2:0] $end
$var reg 32 2 PC [31:0] $end
$var reg 1 3 SELECT_imm $end
$var reg 1 4 SELECT_neg $end
$var reg 1 5 WRITEENABLE $end
$scope module Alu $end
$var wire 3 6 SELECT [2:0] $end
$var wire 8 7 OUTPUT_or [7:0] $end
$var wire 8 8 OUTPUT_forward [7:0] $end
$var wire 8 9 OUTPUT_and [7:0] $end
$var wire 8 : OUTPUT_add [7:0] $end
$var wire 8 ; DATA2 [7:0] $end
$var wire 8 < DATA1 [7:0] $end
$var reg 8 = RESULT [7:0] $end
$scope module add_ $end
$var wire 8 > RESULT [7:0] $end
$var wire 8 ? DATA2 [7:0] $end
$var wire 8 @ DATA1 [7:0] $end
$upscope $end
$scope module and_ $end
$var wire 8 A RESULT [7:0] $end
$var wire 8 B DATA2 [7:0] $end
$var wire 8 C DATA1 [7:0] $end
$upscope $end
$scope module forward_ $end
$var wire 8 D RESULT [7:0] $end
$var wire 8 E DATA2 [7:0] $end
$upscope $end
$scope module or_ $end
$var wire 8 F RESULT [7:0] $end
$var wire 8 G DATA2 [7:0] $end
$var wire 8 H DATA1 [7:0] $end
$upscope $end
$upscope $end
$scope module ImmediateMUX $end
$var wire 8 I INPUT2 [7:0] $end
$var wire 1 3 SELECT $end
$var wire 8 J INPUT1 [7:0] $end
$var reg 8 K OUTPUT [7:0] $end
$upscope $end
$scope module NegationMux $end
$var wire 1 4 SELECT $end
$var wire 8 L INPUT2 [7:0] $end
$var wire 8 M INPUT1 [7:0] $end
$var reg 8 N OUTPUT [7:0] $end
$upscope $end
$scope module Reg $end
$var wire 1 # CLK $end
$var wire 8 O IN [7:0] $end
$var wire 3 P INADDRESS [2:0] $end
$var wire 8 Q OUT1 [7:0] $end
$var wire 3 R OUT1ADDRESS [2:0] $end
$var wire 8 S OUT2 [7:0] $end
$var wire 3 T OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 5 WRITE $end
$var integer 32 U i [31:0] $end
$upscope $end
$scope module TwosCompliment $end
$var wire 8 V REGOUT2 [7:0] $end
$var wire 8 W RESULT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
x4
x3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
1$
0#
bx "
bx !
$end
#4
b1000 U
1#
#5
b0 !
b0 2
0$
#7
b0 &
b0 P
b0 +
b0 R
b101 *
b101 T
b0 ,
b101 .
b101 I
b101 "
b101 %
#8
b101 /
b101 ;
b101 ?
b101 B
b101 E
b101 G
b101 K
15
04
13
b0 1
b0 6
0#
#9
b101 0
b101 =
b101 O
b0 '
b0 J
b0 N
bx1x1 7
bx1x1 F
b0x0x 9
b0x0x A
b101 8
b101 D
b0 )
b0 <
b0 @
b0 C
b0 H
b0 Q
b0 (
b0 M
b0 S
b0 V
#10
b101 7
b101 F
b0 9
b0 A
b0 -
b0 L
b0 W
#11
b101 :
b101 >
#12
1#
#13
b100 !
b100 2
#15
b1 &
b1 P
b1001 /
b1001 ;
b1001 ?
b1001 B
b1001 E
b1001 G
b1001 K
b1 *
b1 T
b1001 .
b1001 I
b101 )
b101 <
b101 @
b101 C
b101 H
b101 Q
b10000000000001001 "
b10000000000001001 %
#16
b1001 0
b1001 =
b1001 O
b1101 7
b1101 F
b1001 8
b1001 D
b1 9
b1 A
0#
#17
b1110 :
b1110 >
#20
1#
#21
b1000 !
b1000 2
#23
b10 &
b10 P
b1 /
b1 ;
b1 ?
b1 B
b1 E
b1 G
b1 K
b1001 '
b1001 J
b1001 N
b1 ,
b1 .
b1 I
b1001 (
b1001 M
b1001 S
b1001 V
b1000000100000000000000001 "
b1000000100000000000000001 %
#24
b1 0
b1 =
b1 O
b1001 /
b1001 ;
b1001 ?
b1001 B
b1001 E
b1001 G
b1001 K
b101 7
b101 F
b1 8
b1 D
b11110111 -
b11110111 L
b11110111 W
03
0#
#25
b1001 0
b1001 =
b1001 O
b1101 7
b1101 F
b1001 8
b1001 D
#28
1#
#29
b1100 !
b1100 2
#31
b11 &
b11 P
b10 +
b10 R
b0 *
b0 T
b10 ,
b0 .
b0 I
b10000000110000001000000000 "
b10000000110000001000000000 %
#32
b1110 0
b1110 =
b1110 O
b1 1
b1 6
0#
#33
b101 /
b101 ;
b101 ?
b101 B
b101 E
b101 G
b101 K
b101 '
b101 J
b101 N
b1001 )
b1001 <
b1001 @
b1001 C
b1001 H
b1001 Q
b101 (
b101 M
b101 S
b101 V
#34
b101 8
b101 D
b11111011 -
b11111011 L
b11111011 W
#36
1#
#37
b10000 !
b10000 2
#39
b100 &
b100 P
b11 +
b11 R
b1 *
b1 T
b11 ,
b1 .
b1 I
b11000001000000001100000001 "
b11000001000000001100000001 %
#40
b11111011 /
b11111011 ;
b11111011 ?
b11111011 B
b11111011 E
b11111011 G
b11111011 K
b11111011 '
b11111011 J
b11111011 N
14
0#
#41
b11111011 7
b11111011 F
b1001 9
b1001 A
b11111011 8
b11111011 D
b1110 )
b1110 <
b1110 @
b1110 C
b1110 H
b1110 Q
b1001 (
b1001 M
b1001 S
b1001 V
#42
b11110111 /
b11110111 ;
b11110111 ?
b11110111 B
b11110111 E
b11110111 G
b11110111 K
b11110111 '
b11110111 J
b11110111 N
b11111111 7
b11111111 F
b1010 9
b1010 A
b11110111 -
b11110111 L
b11110111 W
#43
b110 9
b110 A
b11110111 8
b11110111 D
#44
b101 0
b101 =
b101 O
b101 :
b101 >
1#
#45
b10100 !
b10100 2
#47
b0 &
b0 P
b0 +
b0 R
b101 *
b101 T
b0 ,
b1110101 .
b1110101 I
b1110101 "
b1110101 %
#48
b1001 '
b1001 J
b1001 N
b1110101 /
b1110101 ;
b1110101 ?
b1110101 B
b1110101 E
b1110101 G
b1110101 K
b11110111 0
b11110111 =
b11110111 O
04
13
b0 1
b0 6
0#
#49
b1110101 0
b1110101 =
b1110101 O
b0 '
b0 J
b0 N
b1111111 7
b1111111 F
b100 9
b100 A
b1110101 8
b1110101 D
b101 )
b101 <
b101 @
b101 C
b101 H
b101 Q
b0 (
b0 M
b0 S
b0 V
#50
b1110101 7
b1110101 F
b101 9
b101 A
b0 -
b0 L
b0 W
#51
b1111010 :
b1111010 >
#52
1#
#53
b11000 !
b11000 2
#55
b1 &
b1 P
b10010010 /
b10010010 ;
b10010010 ?
b10010010 B
b10010010 E
b10010010 G
b10010010 K
b10 *
b10 T
b10010010 .
b10010010 I
b1110101 )
b1110101 <
b1110101 @
b1110101 C
b1110101 H
b1110101 Q
b10000000010010010 "
b10000000010010010 %
#56
b10010010 0
b10010010 =
b10010010 O
b11110111 7
b11110111 F
b10010010 8
b10010010 D
b10000 9
b10000 A
0#
#57
b1001 '
b1001 J
b1001 N
b1001 (
b1001 M
b1001 S
b1001 V
b111 :
b111 >
#58
b11110111 -
b11110111 L
b11110111 W
#60
1#
#61
b11100 !
b11100 2
#63
b101 &
b101 P
b1 +
b1 R
b0 /
b0 ;
b0 ?
b0 B
b0 E
b0 G
b0 K
b0 *
b0 T
b100 ,
b0 .
b0 I
b100000001010000000100000000 "
b100000001010000000100000000 %
#64
b1001 /
b1001 ;
b1001 ?
b1001 B
b1001 E
b1001 G
b1001 K
b0 0
b0 =
b0 O
b1110101 7
b1110101 F
b0 9
b0 A
b0 8
b0 D
03
b10 1
b10 6
0#
#65
b1110101 /
b1110101 ;
b1110101 ?
b1110101 B
b1110101 E
b1110101 G
b1110101 K
b1 0
b1 =
b1 O
b1110101 '
b1110101 J
b1110101 N
b1111101 7
b1111101 F
b1 9
b1 A
b1001 8
b1001 D
b10010010 )
b10010010 <
b10010010 @
b10010010 C
b10010010 H
b10010010 Q
b1110101 (
b1110101 M
b1110101 S
b1110101 V
#66
b10000 0
b10000 =
b10000 O
b1110101 8
b1110101 D
b11110111 7
b11110111 F
b10000 9
b10000 A
b10001011 -
b10001011 L
b10001011 W
#68
1#
#69
b100000 !
b100000 2
#71
b110 &
b110 P
b101 +
b101 R
b10 *
b10 T
b101 ,
b10 .
b10 I
b101000001100000010100000010 "
b101000001100000010100000010 %
#72
b11110111 0
b11110111 =
b11110111 O
b11 1
b11 6
0#
#73
b1001 /
b1001 ;
b1001 ?
b1001 B
b1001 E
b1001 G
b1001 K
b1001 '
b1001 J
b1001 N
b10000 )
b10000 <
b10000 @
b10000 C
b10000 H
b10000 Q
b1001 (
b1001 M
b1001 S
b1001 V
#74
b11001 0
b11001 =
b11001 O
b0 9
b0 A
b1001 8
b1001 D
b11001 7
b11001 F
b11110111 -
b11110111 L
b11110111 W
#75
b11001 :
b11001 >
#76
1#
#77
b100100 !
b100100 2
#79
bx &
bx P
bx +
bx R
bx *
bx T
bx ,
bx .
bx I
bx "
bx %
#80
0#
#81
bx /
bx ;
bx ?
bx B
bx E
bx G
bx K
bx '
bx J
bx N
bx )
bx <
bx @
bx C
bx H
bx Q
bx (
bx M
bx S
bx V
#82
bx 0
bx =
bx O
bx 8
bx D
bx 7
bx F
bx 9
bx A
bx -
bx L
bx W
#83
bx :
bx >
#84
1#
#85
b101000 !
b101000 2
#88
0#
#92
1#
#93
b101100 !
b101100 2
#96
0#
#100
1#
#101
b110000 !
b110000 2
#104
0#
#108
1#
#109
b110100 !
b110100 2
#112
0#
#116
1#
#117
b111000 !
b111000 2
#120
0#
#124
1#
#125
b111100 !
b111100 2
#128
0#
#132
1#
#133
b1000000 !
b1000000 2
#136
0#
#140
1#
#141
b1000100 !
b1000100 2
#144
0#
#148
1#
#149
b1001000 !
b1001000 2
#152
0#
#156
1#
#157
b1001100 !
b1001100 2
#160
0#
#164
1#
#165
b1010000 !
b1010000 2
#168
0#
#172
1#
#173
b1010100 !
b1010100 2
#176
0#
#180
1#
#181
b1011000 !
b1011000 2
#184
0#
#188
1#
#189
b1011100 !
b1011100 2
#192
0#
#196
1#
#197
b1100000 !
b1100000 2
#200
0#
#204
1#
#205
b1100100 !
b1100100 2
#208
0#
#212
1#
#213
b1101000 !
b1101000 2
#216
0#
#220
1#
#221
b1101100 !
b1101100 2
#224
0#
#228
1#
#229
b1110000 !
b1110000 2
#232
0#
#236
1#
#237
b1110100 !
b1110100 2
#240
0#
#244
1#
#245
b1111000 !
b1111000 2
#248
0#
#252
1#
#253
b1111100 !
b1111100 2
#256
0#
#260
1#
#261
b10000000 !
b10000000 2
#264
0#
#268
1#
#269
b10000100 !
b10000100 2
#272
0#
#276
1#
#277
b10001000 !
b10001000 2
#280
0#
#284
1#
#285
b10001100 !
b10001100 2
#288
0#
#292
1#
#293
b10010000 !
b10010000 2
#296
0#
#300
1#
#301
b10010100 !
b10010100 2
#304
0#
#308
1#
#309
b10011000 !
b10011000 2
#312
0#
#316
1#
#317
b10011100 !
b10011100 2
#320
0#
#324
1#
#325
b10100000 !
b10100000 2
#328
0#
#332
1#
#333
b10100100 !
b10100100 2
#336
0#
#340
1#
#341
b10101000 !
b10101000 2
#344
0#
#348
1#
#349
b10101100 !
b10101100 2
#352
0#
#356
1#
#357
b10110000 !
b10110000 2
#360
0#
#364
1#
#365
b10110100 !
b10110100 2
#368
0#
#372
1#
#373
b10111000 !
b10111000 2
#376
0#
#380
1#
#381
b10111100 !
b10111100 2
#384
0#
#388
1#
#389
b11000000 !
b11000000 2
#392
0#
#396
1#
#397
b11000100 !
b11000100 2
#400
0#
#404
1#
#405
b11001000 !
b11001000 2
#408
0#
#412
1#
#413
b11001100 !
b11001100 2
#416
0#
#420
1#
#421
b11010000 !
b11010000 2
#424
0#
#428
1#
#429
b11010100 !
b11010100 2
#432
0#
#436
1#
#437
b11011000 !
b11011000 2
#440
0#
#444
1#
#445
b11011100 !
b11011100 2
#448
0#
#452
1#
#453
b11100000 !
b11100000 2
#456
0#
#460
1#
#461
b11100100 !
b11100100 2
#464
0#
#468
1#
#469
b11101000 !
b11101000 2
#472
0#
#476
1#
#477
b11101100 !
b11101100 2
#480
0#
#484
1#
#485
b11110000 !
b11110000 2
#488
0#
#492
1#
#493
b11110100 !
b11110100 2
#496
0#
#500
1#
#501
b11111000 !
b11111000 2
#504
0#
#505
